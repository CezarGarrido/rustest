name: Build Rust Project

on:
  push:
    branches:
      - main

jobs:
  build-msvc32:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "i686-pc-windows-msvc"
      
      - name: CI-Build
        run: cargo build --release --target=i686-pc-windows-msvc
      
      - name: Copy Build Artifact
        run: |
          mkdir out 
          cp target/i686-pc-windows-msvc/release/*.exe out/
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release_i686-pc-windows-msvc
          path: out

  github-release:
    name: GitHub Release
    needs: [build-msvc32]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download windows-msvc
        uses: actions/download-artifact@v4
        with:
          name: release_i686-pc-windows-msvc
          path: out
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          if gh release view '${{ github.ref_name }}' --repo '${{ github.repository }}'; then
            echo "Release exists"
          else
            echo "Creating release"
            gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --generate-notes
          fi
      - name: Upload ZIPs to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload "${{ github.ref_name }}" out/*.exe --repo "${{ github.repository }}"
